#!/usr/bin/env bash

# TODO: support pdfs with different numbers of pages

source ~/prefix/lib/utilities.sh
ensure_exists compare
ensure_exists pdftk
ensure_exists realpath
ensure_exists pdfunite

# split a pdf into individual pages
function split_pdf() {
  local filename=$(remove_extension $1)
  pdftk $filename.pdf burst output $filename-%03d.pdf
}

# for a given prefix, get the largest page number after a split
function last_page() {
  local prefix=$1
  local filename=$(ls $prefix-* | sort | tail -1)
  local last=$(remove_extension ${filename#$prefix-})
  echo $(( $last ))
}

pwd=$PWD
a=$(realpath $1)
b=$(realpath $2)

for file in $a $b; do
  if [[ $(get_extension $file) != "pdf" ]]; then
    log_error "script only works on pdf files"
  fi
done

# do all our work in a temporary directory
tmpdir=$(mktemp -d)
trap "rm -rf $tmpdir" EXIT
cd $tmpdir

# localize a and b to temporary directory
cp $a .
cp $b .
a=$(basename $a)
b=$(basename $b)

split_pdf $a
split_pdf $b

a_no_ext=$(remove_extension $a)
b_no_ext=$(remove_extension $b)

last_page_a=$(last_page $a_no_ext)
last_page_b=$(last_page $b_no_ext)
last_page_min=$(min $last_page_a $last_page_b)

if [[ $last_page_a -ne $last_page_b ]]; then
  log_warn "number of pages differ: $last_page_a ($a) vs $last_page_b ($b)"
  log_warn "diffing only the first $last_page_min pages"
fi

for i in $(seq 1 $last_page_min); do
  page_number=$(printf '%03d' $i)
  a_page=$a_no_ext-$page_number.pdf
  b_page=$b_no_ext-$page_number.pdf

  compare $a_page $b_page -compose src out.tmp
  pdftk out.tmp background $a_page output diff-$page_number.pdf
done

pdfunite diff-*.pdf diff.pdf
zathura diff.pdf
