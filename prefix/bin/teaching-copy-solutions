#!/usr/bin/env bash

source ~/prefix/lib/utilities.sh

function usage() {
  echo "$(basename $0) copies solutions into the appropriate directories for each program.

    Required arguments:
        -p|--program          The program number to copy solutions for
        -r|--repo-path        The repository path to copy solutions from

    Optional arguments:
        -h|--help             Show this help
"
}

while [[ $# -gt 0 ]]; do
  key="$1"
  case $key in
    -p | --program)
      program="$2"
      shift
      shift
      ;;
    -r | --repo-path)
      repo_path="$2"
      shift
      shift
      ;;
    -h | --help)
      usage
      exit
      ;;
    *)
      shift
      ;;
  esac
done

# require a program value
if [[ -z "$program" ]]; then
  log_error "no program value provided"
fi

# require a repository path
if [[ -z "$repo_path" ]]; then
  log_error "no repository path provided"
fi

# require the repository to be on the solutions branch
pushd $repo_path
branch=$(git symbolic-ref --short -q HEAD)
if [[ $branch != "solutions" ]]; then
  echo "$repo_path is on branch $branch, requires branch solution"
  exit 1
fi
popd

# remove windows specific bazelrc settings that cause errors on linux
rm .bazelrc

# all errors checked, let's continue
files="$(bazel query "kind('source file', deps(java:$program))" 2> /dev/null | grep '.java' |
  grep '//java/src/' | sed 's,^//,,g; s,:,/,g')"
for file in $files; do
  dirpath=$(dirname $file)
  directory=solutions/$dirpath
  mkdir -p $directory
  cp $repo_path/$file $directory
done

# replace removed files
git checkout .bazelrc
