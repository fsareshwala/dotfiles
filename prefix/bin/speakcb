#!/usr/bin/env bash

# Use the Google Cloud Text to Speech API to synthesize clipboard text to audio. Requires the Google
# Cloud SDK be installed first.
#
# Instructions to install are available here: https://cloud.google.com/sdk/docs/downloads-apt-get

source ~/prefix/lib/utilities.sh
ensure_exists gcloud
ensure_exists jq
ensure_exists xclip
ensure_exists ffplay

export GOOGLE_APPLICATION_CREDENTIALS="$(realpath ~/personal/keys/personal-project-285905.json)"

tmpdir=$(mktemp -d)
trap "rm -rf $tmpdir" EXIT
cd $tmpdir

function speak() {
  local access_token="$(gcloud auth application-default print-access-token)"

  cat << EOF > request.json
{
  "input": {
    "text": "$@"
  },
  "voice": {
    "languageCode": "en-US",
    "name": "en-US-Wavenet-D",
    "ssmlGender": "MALE"
  },
  "audioConfig": {
    "audioEncoding": "MP3",
    "speakingRate": 2.0
  }
}
EOF

  curl -X POST \
  -H "Authorization: Bearer $access_token" \
  -H "Content-Type: application/json; charset=utf-8" \
  -d @request.json https://texttospeech.googleapis.com/v1/text:synthesize > response.json

  error_message=$(jq .error.message response.json)
  if [[ $error_message != "null" ]]; then
    notify-send 'Failure: Speak Cliboard' "$error_message"
    exit 1
  fi

  jq -r .audioContent response.json | base64 --decode > out.mp3
  ffplay -autoexit -nodisp out.mp3
}

words="$(xclip -o -selection clipboard | sed -e 's/"/\\"/g' | tr -s '[:space:]' '\n')"
text=''
for word in $words; do
  if [[ $(( ${#text} + ${#word} )) -gt 4800 ]]; then # api has 5000 char limit, pad a bit
    speak "$text"
    text=''
  fi

  text+=" $word"
done

speak "$text"
notify-send 'Done' 'Completed speaking this document'
